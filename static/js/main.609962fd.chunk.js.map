{"version":3,"sources":["assets/logo.svg","assets/sign-up-background.png","styles/global.ts","utils/getValidationErrors.ts","components/input/styles.ts","components/input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","getValidationErrors","err","validationErrors","inner","forEach","error","path","message","Container","styled","div","isFocused","css","isFilled","Input","name","Icon","icon","rest","inputRef","useRef","useState","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputBlur","useCallback","current","value","handleInputFocus","useEffect","ref","size","onFocus","onBlur","button","shade","Button","children","type","Content","Background","signUpBackgroundImg","SignUp","formRef","handleSubmit","data","a","setErrors","schema","Yup","shape","required","email","password","min","validate","abortEarly","errors","src","logoImg","alt","onSubmit","FiUser","placeholder","FiMail","FiLock","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.609962fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a49b07ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding:0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n  body{\n    background: #312e38;\n    color: #fff;\n    -webkit-font-smoothing: antialiased\n  }\n\n  body,input,button{\n    font-family: 'Roboto Slab',serif;\n    font-size:16px\n  }\n\n  h1 ,h2,h3,h4,h5,h6,strong{\n    font-weight:500\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import styled, { css } from \"styled-components\";\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  border: 2px solid #232129;\n  padding: 16px;\n  width: 100%;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${({ isFocused }) =>\n    isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${({ isFilled }) =>\n    isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n","import React, { FC, InputHTMLAttributes, ComponentType, useEffect, useRef, useState, useCallback } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: ComponentType<IconBaseProps>;\n}\n\nconst Input: FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input defaultValue={defaultValue} ref={inputRef} {...rest} onFocus={handleInputFocus} onBlur={handleInputBlur} />\n      {error}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #312e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, \"#ff9000\")};\n  }\n`;\n","import React, { FC, ButtonHTMLAttributes } from \"react\";\n\nimport { Container } from \"./styles\";\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\nimport signUpBackgroundImg from \"../../assets/sign-up-background.png\";\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  place-content: center;\n  width: 100%;\n  max-width: 700px;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #f4ede8;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, \"#f4ede8\")};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signUpBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { FC, useCallback, useRef } from 'react';\nimport { FiLock, FiUser, FiMail, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\nconst SignUp: FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: object) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome Obrigatório'),\n        email: Yup.string().required('E-mail Obrigatório').email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'No minimo 6 digitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const errors = getValidationErrors(err);\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n        <a href=\"login\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React, { FC } from \"react\";\n\nimport GlobalStyle from \"./styles/global\";\nimport SignUp from \"./pages/SignUp\";\n\nconst App: FC = () => (\n  <>\n    <SignUp />\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}