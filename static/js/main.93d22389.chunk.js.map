{"version":3,"sources":["assets/logo.svg","assets/sign-in-background.png","styles/global.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/input/styles.ts","components/input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","utils/getValidationErrors.ts","services/api.ts","hooks/AuthContext.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","Container","styled","div","Tooltip","title","children","className","isErrored","css","isFocused","isFilled","Error","ToolTip","Input","name","Icon","icon","rest","inputRef","useRef","useState","setIsFocused","setIsFilled","useField","fieldName","defaultValue","error","registerField","handleInputBlur","useCallback","current","value","handleInputFocus","useEffect","ref","path","size","onFocus","onBlur","color","button","shade","Button","type","getValidationErrors","err","validationErrors","inner","forEach","message","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","token","localStorage","getItem","user","JSON","parse","data","setData","signIn","a","email","password","post","response","setItem","stringify","signOut","clear","Provider","Content","Background","signInBackgroundImg","SignIn","formRef","context","useContext","useAuth","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","errors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d22389.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a49b07ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding:0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n  body{\n    background: #312e38;\n    color: #fff;\n    -webkit-font-smoothing: antialiased\n  }\n\n  body,input,button{\n    font-family: 'Roboto Slab',serif;\n    font-size:16px\n  }\n\n  h1 ,h2,h3,h4,h5,h6,strong{\n    font-weight:500\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { Container } from './styles';\n\ninterface Tooltiprops {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: FC<Tooltiprops> = ({ title, children, className }) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\nimport ToolTip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  border: 2px solid #232129;\n  padding: 16px;\n  width: 100%;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${({ isErrored }) =>\n    isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${({ isFocused }) =>\n    isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${({ isFilled }) =>\n    isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(ToolTip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, { FC, InputHTMLAttributes, ComponentType, useEffect, useRef, useState, useCallback } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: ComponentType<IconBaseProps>;\n}\n\nconst Input: FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input defaultValue={defaultValue} ref={inputRef} {...rest} onFocus={handleInputFocus} onBlur={handleInputBlur} />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #312e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, \"#ff9000\")};\n  }\n`;\n","import React, { FC, ButtonHTMLAttributes } from \"react\";\n\nimport { Container } from \"./styles\";\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","import React, { createContext, FC, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\ninterface AuthContextData {\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n\n  user: object;\n}\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.clear();\n\n    setData({} as AuthState);\n  }, []);\n  return <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>{children}</AuthContext.Provider>;\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\nimport signInBackgroundImg from \"../../assets/sign-in-background.png\";\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  place-content: center;\n  width: 100%;\n  max-width: 700px;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, \"#ff9000\")};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { FC, useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport logoImg from '../../assets/logo.svg';\nimport Input from '../../components/input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { useAuth } from '../../hooks/AuthContext';\n\nimport { Container, Content, Background } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        const errors = getValidationErrors(err);\n        formRef.current?.setErrors(errors);\n      }\n    },\n    [signIn],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu logon</h1>\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n          <Button type=\"submit\">Entrar</Button>\n\n          <a href=\"forgot\">Esqueci a minha senha</a>\n        </Form>\n        <a href=\"login\">\n          <FiLogIn />\n          Criar conta\n        </a>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import React, { FC } from 'react';\n\nimport GlobalStyle from './styles/global';\nimport SignIn from './pages/SignIn';\n\nimport { AuthProvider } from './hooks/AuthContext';\n\nconst App: FC = () => (\n  <>\n    <AuthProvider>\n      <SignIn />\n    </AuthProvider>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}